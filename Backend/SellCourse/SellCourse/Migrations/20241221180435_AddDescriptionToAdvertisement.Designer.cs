// <auto-generated />
using System;
using CNTT36_WebXemPhim.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CNTT36_WebXemPhim.Migrations
{
    [DbContext(typeof(SellCourseContext))]
    [Migration("20241221180435_AddDescriptionToAdvertisement")]
    partial class AddDescriptionToAdvertisement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("banner_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<string>("BannerImg")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("banner_img");

                    b.Property<string>("BannerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("banner_name");

                    b.HasKey("BannerId")
                        .HasName("PK__Banner__10373C349082E415");

                    b.ToTable("Banner", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cart_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("added_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__2EF52A275E0A37BB");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Category", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cate_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("CateId")
                        .HasName("PK__Categori__34EAD17357C420E7");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("content");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("CommentId")
                        .HasName("PK__Comments__E79576879CD3DAB6");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("country_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("country_name");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CountryId")
                        .HasName("PK__Countrie__7E8CD055C0C20FCB");

                    b.HasIndex(new[] { "CountryName" }, "UQ__Countrie__F70188942829FAC8")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("language");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("release_date");

                    b.Property<string>("ThumbnailUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("thumbnail_url");

                    b.Property<string>("ThumbnailUrl2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("thumbnail_url2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__8F1EF7AEEE180E08");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.CourseCate", b =>
                {
                    b.Property<int>("CourseCateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_cate_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseCateId"));

                    b.Property<int>("CateId")
                        .HasColumnType("int")
                        .HasColumnName("cate_id");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.HasKey("CourseCateId")
                        .HasName("PK__Course_c__8D434246D2AAB075");

                    b.HasIndex("CateId");

                    b.HasIndex("CourseId");

                    b.ToTable("Course_cate", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.DetailUser", b =>
                {
                    b.Property<int>("DetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("detail_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("DetailId")
                        .HasName("PK__Detail_U__38E9A224B8FF4ECC");

                    b.HasIndex(new[] { "Username" }, "UQ__Detail_U__F3DBC572365486A0")
                        .IsUnique();

                    b.ToTable("Detail_Users", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("completion_date");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("enrollment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Progress")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("progress");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__Enrollme__6D24AA7A8F8F3B07");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime")
                        .HasColumnName("start_time");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("HistoryId")
                        .HasName("PK__History__096AA2E948266086");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("History", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("int")
                        .HasColumnName("lesson_number");

                    b.Property<DateOnly?>("ReleaseDate")
                        .HasColumnType("date")
                        .HasColumnName("release_date");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("video_url");

                    b.HasKey("LessonId")
                        .HasName("PK__Lessons__6421F7BE4AD20A7B");

                    b.HasIndex("CourseId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Like", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("like_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LikeId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("LikeId")
                        .HasName("PK__Likes__992C79307D1EEE27");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("news_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Decriptions")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("decriptions");

                    b.Property<string>("ThumnailUrl")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("thumnail_url");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("NewsId")
                        .HasName("PK__News__4C27CCD8212ABE04");

                    b.ToTable("News");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.PaymentTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    b.Property<DateOnly>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("transaction_date");

                    b.HasKey("TransactionId")
                        .HasName("PK__Payment___85C600AF11C41AE6");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Payment_Transactions", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.RatingFilm", b =>
                {
                    b.Property<int>("RatingFilmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("rating_film_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingFilmId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<double?>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("RatingFilmId")
                        .HasName("PK__Rating_F__CA972B1C1453A190");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Rating_Film", null, t =>
                        {
                            t.HasTrigger("trg_UpdateCourseRating");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__760965CCC6281E9B");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__783254B17DFB5884")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.RoleCourse", b =>
                {
                    b.Property<int>("RoleCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleCourseId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleCourseId")
                        .HasName("PK__Role_Cou__C4703ABA5B34798C");

                    b.ToTable("Role_Course", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("PaymentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("plan");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("SubscriptionId")
                        .HasName("PK__Subscrip__863A7EC1DD87DB5F");

                    b.HasIndex("Username");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("ProfilePictureUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("profile_picture_url");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teacher__03AE777EAB9D5E69");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.TeacherRoleCourse", b =>
                {
                    b.Property<int>("TeacherRoleCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_role_course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherRoleCourseId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int?>("RoleCourseId")
                        .HasColumnType("int")
                        .HasColumnName("role_course_id");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("TeacherRoleCourseId")
                        .HasName("PK__Teacher___5B69A6359BEC912E");

                    b.HasIndex("CourseId");

                    b.HasIndex("RoleCourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Teacher_Role_Course", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("MembershipStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("membership_status");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Username")
                        .HasName("PK__Users__F3DBC57395CAAA61");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E616451A79735")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("UserRoleId")
                        .HasName("PK__User_Rol__B8D9ABA2C191CA5A");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username");

                    b.ToTable("User_Roles", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Watchlist", b =>
                {
                    b.Property<int>("WatchlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("watchlist_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WatchlistId"));

                    b.Property<DateTime?>("AddedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("added_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.HasKey("WatchlistId")
                        .HasName("PK__Watchlis__36A90B31AB1E9318");

                    b.HasIndex("CourseId");

                    b.HasIndex("Username");

                    b.ToTable("Watchlist", (string)null);
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Cart", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Carts")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__course_id__2EDAF651");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Cart__username__2DE6D218");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Comment", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Comments")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__course__18EBB532");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__userna__17F790F9");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.CourseCate", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Category", "Cate")
                        .WithMany("CourseCates")
                        .HasForeignKey("CateId")
                        .IsRequired()
                        .HasConstraintName("FK__Course_ca__cate___6A30C649");

                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("CourseCates")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Course_ca__cours__693CA210");

                    b.Navigation("Cate");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.DetailUser", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithOne("DetailUser")
                        .HasForeignKey("CNTT36_WebXemPhim.Models.DetailUser", "Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Detail_Us__usern__534D60F1");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Enrollment", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Enrollmen__cours__66603565");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Enrollments")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Enrollmen__usern__656C112C");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.History", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Histories")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__History__course___02084FDA");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Histories")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__History__usernam__02FC7413");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Lesson", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Lessons__course___208CD6FA");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Like", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Likes")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Likes__course_id__08B54D69");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Likes")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Likes__username__07C12930");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.PaymentTransaction", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Subscription", "Subscription")
                        .WithMany("PaymentTransactions")
                        .HasForeignKey("SubscriptionId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment_T__subsc__25518C17");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.RatingFilm", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("RatingFilms")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Rating_Fi__cours__2A164134");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("RatingFilms")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Rating_Fi__usern__29221CFB");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Subscription", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Subscript__usern__7E37BEF6");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.TeacherRoleCourse", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("TeacherRoleCourses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Teacher_R__cours__73BA3083");

                    b.HasOne("CNTT36_WebXemPhim.Models.RoleCourse", "RoleCourse")
                        .WithMany("TeacherRoleCourses")
                        .HasForeignKey("RoleCourseId")
                        .HasConstraintName("FK__Teacher_R__role___72C60C4A");

                    b.HasOne("CNTT36_WebXemPhim.Models.Teacher", "Teacher")
                        .WithMany("TeacherRoleCourses")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Teacher_R__teach__71D1E811");

                    b.Navigation("Course");

                    b.Navigation("RoleCourse");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.UserRole", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__role___571DF1D5");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("UserRoles")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__User_Role__usern__5629CD9C");

                    b.Navigation("Role");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Watchlist", b =>
                {
                    b.HasOne("CNTT36_WebXemPhim.Models.Course", "Course")
                        .WithMany("Watchlists")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Watchlist__cours__787EE5A0");

                    b.HasOne("CNTT36_WebXemPhim.Models.User", "UsernameNavigation")
                        .WithMany("Watchlists")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("FK__Watchlist__usern__778AC167");

                    b.Navigation("Course");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Category", b =>
                {
                    b.Navigation("CourseCates");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Course", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("CourseCates");

                    b.Navigation("Enrollments");

                    b.Navigation("Histories");

                    b.Navigation("Lessons");

                    b.Navigation("Likes");

                    b.Navigation("RatingFilms");

                    b.Navigation("TeacherRoleCourses");

                    b.Navigation("Watchlists");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.RoleCourse", b =>
                {
                    b.Navigation("TeacherRoleCourses");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Subscription", b =>
                {
                    b.Navigation("PaymentTransactions");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.Teacher", b =>
                {
                    b.Navigation("TeacherRoleCourses");
                });

            modelBuilder.Entity("CNTT36_WebXemPhim.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Comments");

                    b.Navigation("DetailUser");

                    b.Navigation("Enrollments");

                    b.Navigation("Histories");

                    b.Navigation("Likes");

                    b.Navigation("RatingFilms");

                    b.Navigation("Subscriptions");

                    b.Navigation("UserRoles");

                    b.Navigation("Watchlists");
                });
#pragma warning restore 612, 618
        }
    }
}
